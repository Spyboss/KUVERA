# Kuvera Grid Trading Bot - Environment Configuration Template
# Copy this file to .env and fill in your actual API keys

# =============================================================================
# BINANCE API CONFIGURATION
# =============================================================================
# Get your API keys from: https://www.binance.com/en/my/settings/api-management
# For testnet: https://testnet.binance.vision/

# Live Trading API Keys (REAL MONEY - USE WITH CAUTION!)
BINANCE_API_KEY=your_binance_api_key_here
BINANCE_SECRET_KEY=your_binance_secret_key_here

# Testnet API Keys (Fake money for testing)
BINANCE_TESTNET_API_KEY=your_testnet_api_key_here
BINANCE_TESTNET_SECRET_KEY=your_testnet_secret_key_here

# =============================================================================
# AI INTEGRATION (OPTIONAL)
# =============================================================================
# OpenRouter API for AI-enhanced trading decisions
# Get your free API key from: https://openrouter.ai/
# Free tier: 200 requests/day, perfect for autonomous trading

OPENROUTER_API_KEY=your_openrouter_api_key_here

# =============================================================================
# TRADING CONFIGURATION
# =============================================================================
# Override default config values (optional)

# Trading capital (USD)
# TRADING_CAPITAL=30

# Risk per trade (percentage of capital)
# RISK_PER_TRADE=0.01

# Maximum position size (percentage of capital)
# MAX_POSITION_SIZE=0.1

# =============================================================================
# AUTONOMOUS TRADING SETTINGS
# =============================================================================
# AI confidence threshold for trade execution (0.0 to 1.0)
AI_CONFIDENCE_THRESHOLD=0.7

# Emergency stop settings
MAX_DAILY_LOSS_PERCENT=0.03
MAX_CONSECUTIVE_LOSSES=3
MAX_DRAWDOWN_PERCENT=0.05

# Rate limiting for AI requests (seconds between requests)
AI_REQUEST_COOLDOWN=12

# =============================================================================
# LOGGING AND MONITORING
# =============================================================================
# Log level: DEBUG, INFO, WARNING, ERROR
LOG_LEVEL=INFO

# Enable profit/loss alerts
ENABLE_ALERTS=true

# Alert thresholds
PROFIT_ALERT_THRESHOLD=0.02
LOSS_ALERT_THRESHOLD=0.01

# =============================================================================
# EMAIL ALERTS (OPTIONAL)
# =============================================================================
# Configure email notifications for trading alerts
# Supports Gmail, Outlook, and other SMTP providers

# Email settings
ALERT_EMAIL=your_email@example.com
SMTP_SERVER=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=your_email@example.com
SMTP_PASSWORD=your_app_password

# Alert preferences
ENABLE_EMAIL_ALERTS=false
ALERT_ON_PROFIT=true
ALERT_ON_LOSS=true
ALERT_ON_ERROR=true

# =============================================================================
# SECURITY NOTES
# =============================================================================
# 1. NEVER commit this file with real API keys to version control
# 2. Keep your API keys secure and never share them
# 3. Use testnet for initial testing
# 4. Enable IP restrictions on your Binance API keys
# 5. Use read-only keys for monitoring, trading keys only when needed
# 6. Regularly rotate your API keys for security

# =============================================================================
# QUICK START GUIDE
# =============================================================================
# 1. Copy this file to .env: cp .env.template .env
# 2. Fill in your API keys (start with testnet)
# 3. Run tests: python tests/quick_test.py
# 4. Start bot: python bot.py
# 5. Enable autonomous mode when ready

# For testnet setup:
# 1. Go to https://testnet.binance.vision/
# 2. Create account and generate API keys
# 3. Use testnet keys in this file
# 4. Select 'testnet' mode when starting the bot